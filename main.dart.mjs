  // `modulePromise` is a promise to the `WebAssembly.module` object to be
//   instantiated.
// `importObjectPromise` is a promise to an object that contains any additional
//   imports needed by the module that aren't provided by the standard runtime.
//   The fields on this object will be merged into the importObject with which
//   the module will be instantiated.
// This function returns a promise to the instantiated module.
export const instantiate = async (modulePromise, importObjectPromise) => {
    let asyncBridge;
    let dartInstance;
    function stringFromDartString(string) {
        const totalLength = dartInstance.exports.$stringLength(string);
        let result = '';
        let index = 0;
        while (index < totalLength) {
          let chunkLength = Math.min(totalLength - index, 0xFFFF);
          const array = new Array(chunkLength);
          for (let i = 0; i < chunkLength; i++) {
              array[i] = dartInstance.exports.$stringRead(string, index++);
          }
          result += String.fromCharCode(...array);
        }
        return result;
    }

    function stringToDartString(string) {
        const length = string.length;
        let range = 0;
        for (let i = 0; i < length; i++) {
            range |= string.codePointAt(i);
        }
        if (range < 256) {
            const dartString = dartInstance.exports.$stringAllocate1(length);
            for (let i = 0; i < length; i++) {
                dartInstance.exports.$stringWrite1(dartString, i, string.codePointAt(i));
            }
            return dartString;
        } else {
            const dartString = dartInstance.exports.$stringAllocate2(length);
            for (let i = 0; i < length; i++) {
                dartInstance.exports.$stringWrite2(dartString, i, string.charCodeAt(i));
            }
            return dartString;
        }
    }

    // Converts a Dart List to a JS array. Any Dart objects will be converted, but
    // this will be cheap for JSValues.
    function arrayFromDartList(constructor, list) {
        const length = dartInstance.exports.$listLength(list);
        const array = new constructor(length);
        for (let i = 0; i < length; i++) {
            array[i] = dartInstance.exports.$listRead(list, i);
        }
        return array;
    }

    // A special symbol attached to functions that wrap Dart functions.
    const jsWrappedDartFunctionSymbol = Symbol("JSWrappedDartFunction");

    function finalizeWrapper(dartFunction, wrapped) {
        wrapped.dartFunction = dartFunction;
        wrapped[jsWrappedDartFunctionSymbol] = true;
        return wrapped;
    }

    // Imports
    const dart2wasm = {

  _1190: (args, completer) => asyncBridge(args, completer),
_1191: new WebAssembly.Function(
            {parameters: ['externref', 'anyref'], results: ['anyref']},
            function(future) {
                return new Promise(function (resolve, reject) {
                    dartInstance.exports.$awaitCallback(future, resolve);
                });
            },
            {suspending: 'first'}),
_1192: (resolve, result) =>  resolve(result),
_1187: (ms, c) =>
            setTimeout(
                () => dartInstance.exports.$invokeCallback(c),ms),
_1188: s => stringToDartString(JSON.stringify(stringFromDartString(s))),
_1189: s => console.log(stringFromDartString(s)),
_1097: o => o === undefined,
_1098: o => typeof o === 'boolean',
_1099: o => typeof o === 'number',
_1101: o => typeof o === 'string',
_1104: o => o instanceof Int8Array,
_1105: o => o instanceof Uint8Array,
_1106: o => o instanceof Uint8ClampedArray,
_1107: o => o instanceof Int16Array,
_1108: o => o instanceof Uint16Array,
_1109: o => o instanceof Int32Array,
_1110: o => o instanceof Uint32Array,
_1111: o => o instanceof Float32Array,
_1112: o => o instanceof Float64Array,
_1113: o => o instanceof ArrayBuffer,
_1114: o => o instanceof DataView,
_1115: o => o instanceof Array,
_1116: o => typeof o === 'function' && o[jsWrappedDartFunctionSymbol] === true,
_1118: o => {
            const proto = Object.getPrototypeOf(o);
            return proto === Object.prototype || proto === null;
          },
_1119: o => o instanceof RegExp,
_1120: (l, r) => l === r,
_1121: o => o,
_1122: o => o,
_1123: o => o,
_1124: b => !!b,
_1125: o => o.length,
_1126: (o, i) => o[i],
_1127: f => f.dartFunction,
_1128: l => arrayFromDartList(Int8Array, l),
_1129: l => arrayFromDartList(Uint8Array, l),
_1130: l => arrayFromDartList(Uint8ClampedArray, l),
_1131: l => arrayFromDartList(Int16Array, l),
_1132: l => arrayFromDartList(Uint16Array, l),
_1133: l => arrayFromDartList(Int32Array, l),
_1134: l => arrayFromDartList(Uint32Array, l),
_1135: l => arrayFromDartList(Float32Array, l),
_1136: l => arrayFromDartList(Float64Array, l),
_1137: (data, length) => {
          const view = new DataView(new ArrayBuffer(length));
          for (let i = 0; i < length; i++) {
              view.setUint8(i, dartInstance.exports.$byteDataGetUint8(data, i));
          }
          return view;
        },
_1138: l => arrayFromDartList(Array, l),
_1139: stringFromDartString,
_1140: stringToDartString,
_1141: () => ({}),
_1142: () => [],
_1143: () => globalThis,
_1144: (constructor, args) => {
      const factoryFunction = constructor.bind.apply(
          constructor, [null, ...args]);
      return new factoryFunction();
    },
_1145: (o, p) => p in o,
_1146: (o, p) => o[p],
_1147: (o, p, v) => o[p] = v,
_1148: (o, m, a) => o[m].apply(o, a),
_1149: o => stringToDartString(String(o)),
_1150: (p, s, f) => p.then(s, f),
_1151: s => {
      let jsString = stringFromDartString(s);
      if (/[[\]{}()*+?.\\^$|]/.test(jsString)) {
          jsString = jsString.replace(/[[\]{}()*+?.\\^$|]/g, '\\$&');
      }
      return stringToDartString(jsString);
    },
_1090: (s, m) => {
          try {
            return new RegExp(s, m);
          } catch (e) {
            return String(e);
          }
        },
_1091: x0 => x0.pop(),
_1092: (x0,x1) => x0[x1],
_1094: x0 => x0.length,
_1153: x0 => x0.index,
_1155: (x0,x1) => x0.exec(x1),
_1156: (x0,x1) => x0.test(x1),
_1157: x0 => x0.flags,
_1158: x0 => x0.multiline,
_1159: x0 => x0.ignoreCase,
_1160: x0 => x0.unicode,
_1161: x0 => x0.dotAll,
_1162: (x0,x1) => x0.lastIndex = x1,
_1082: (o, t) => o instanceof t,
_1084: f => finalizeWrapper(f,x0 => dartInstance.exports._1084(f,x0)),
_1085: f => finalizeWrapper(f,x0 => dartInstance.exports._1085(f,x0)),
_1086: o => Object.keys(o),
_1184: () => performance.now(),
_1185: s => stringToDartString(stringFromDartString(s).toUpperCase()),
_1186: s => stringToDartString(stringFromDartString(s).toLowerCase()),
_1163: v => stringToDartString(v.toString()),
_1164: (d, digits) => stringToDartString(d.toFixed(digits)),
_1167: (d, precision) => stringToDartString(d.toPrecision(precision)),
_1174: Date.now,
_1176: s => new Date(s * 1000).getTimezoneOffset() * 60 ,
_1177: s => {
      const jsSource = stringFromDartString(s);
      if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(jsSource)) {
        return NaN;
      }
      return parseFloat(jsSource);
    },
_1178: () => {
          let stackString = new Error().stack.toString();
          let userStackString = stackString.split('\n').slice(3).join('\n');
          return stringToDartString(userStackString);
        },
_1181: () => new WeakMap(),
_1182: (map, o) => map.get(o),
_1183: (map, o, v) => map.set(o, v),
_37: f => finalizeWrapper(f,() => dartInstance.exports._37(f)),
_38: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._38(f,arguments.length,x0) }),
_39: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._39(f,x0,x1)),
_40: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._40(f,arguments.length,x0) }),
_41: x0 => ({locateFile: x0}),
_42: (x0,x1) => ({antialias: x0,majorVersion: x1}),
_43: () => new window.flutterCanvasKit.Paint(),
_44: (x0,x1) => ({B: x0,C: x1}),
_45: (x0,x1) => ({filter: x0,mipmap: x1}),
_46: () => new window.flutterCanvasKit.Path(),
_49: () => new window.flutterCanvasKit.PictureRecorder(),
_50: () => ({}),
_51: () => ({}),
_53: () => ({}),
_54: () => ({}),
_55: () => ({}),
_56: () => ({}),
_57: x0 => new window.flutterCanvasKit.Font(x0),
_59: (x0,x1) => ({ambient: x0,spot: x1}),
_60: f => finalizeWrapper(f,x0 => dartInstance.exports._60(f,x0)),
_61: x0 => new window.FinalizationRegistry(x0),
_62: (x0,x1,x2,x3,x4) => ({width: x0,height: x1,colorType: x2,alphaType: x3,colorSpace: x4}),
_64: f => finalizeWrapper(f,x0 => dartInstance.exports._64(f,x0)),
_65: f => finalizeWrapper(f,x0 => dartInstance.exports._65(f,x0)),
_68: x0 => ({createScriptURL: x0}),
_71: (x0,x1) => ({initializeEngine: x0,autoStart: x1}),
_72: x0 => ({runApp: x0}),
_73: () => ({}),
_75: x0 => new Promise(x0),
_76: f => finalizeWrapper(f,x0 => dartInstance.exports._76(f,x0)),
_77: f => finalizeWrapper(f,x0 => dartInstance.exports._77(f,x0)),
_78: f => finalizeWrapper(f,x0 => dartInstance.exports._78(f,x0)),
_80: f => finalizeWrapper(f,x0 => dartInstance.exports._80(f,x0)),
_81: f => finalizeWrapper(f,x0 => dartInstance.exports._81(f,x0)),
_84: f => finalizeWrapper(f,x0 => dartInstance.exports._84(f,x0)),
_85: f => finalizeWrapper(f,x0 => dartInstance.exports._85(f,x0)),
_86: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._86(f,x0,x1)),
_87: f => finalizeWrapper(f,x0 => dartInstance.exports._87(f,x0)),
_88: f => finalizeWrapper(f,x0 => dartInstance.exports._88(f,x0)),
_89: f => finalizeWrapper(f,x0 => dartInstance.exports._89(f,x0)),
_90: f => finalizeWrapper(f,x0 => dartInstance.exports._90(f,x0)),
_91: f => finalizeWrapper(f,x0 => dartInstance.exports._91(f,x0)),
_92: f => finalizeWrapper(f,x0 => dartInstance.exports._92(f,x0)),
_98: f => finalizeWrapper(f,x0 => dartInstance.exports._98(f,x0)),
_99: f => finalizeWrapper(f,x0 => dartInstance.exports._99(f,x0)),
_100: f => finalizeWrapper(f,x0 => dartInstance.exports._100(f,x0)),
_101: f => finalizeWrapper(f,x0 => dartInstance.exports._101(f,x0)),
_102: f => finalizeWrapper(f,x0 => dartInstance.exports._102(f,x0)),
_103: f => finalizeWrapper(f,x0 => dartInstance.exports._103(f,x0)),
_104: f => finalizeWrapper(f,x0 => dartInstance.exports._104(f,x0)),
_105: f => finalizeWrapper(f,x0 => dartInstance.exports._105(f,x0)),
_106: f => finalizeWrapper(f,x0 => dartInstance.exports._106(f,x0)),
_107: f => finalizeWrapper(f,x0 => dartInstance.exports._107(f,x0)),
_108: f => finalizeWrapper(f,x0 => dartInstance.exports._108(f,x0)),
_109: f => finalizeWrapper(f,x0 => dartInstance.exports._109(f,x0)),
_110: f => finalizeWrapper(f,x0 => dartInstance.exports._110(f,x0)),
_114: f => finalizeWrapper(f,x0 => dartInstance.exports._114(f,x0)),
_115: f => finalizeWrapper(f,x0 => dartInstance.exports._115(f,x0)),
_116: f => finalizeWrapper(f,x0 => dartInstance.exports._116(f,x0)),
_117: f => finalizeWrapper(f,x0 => dartInstance.exports._117(f,x0)),
_118: f => finalizeWrapper(f,x0 => dartInstance.exports._118(f,x0)),
_119: f => finalizeWrapper(f,x0 => dartInstance.exports._119(f,x0)),
_120: f => finalizeWrapper(f,x0 => dartInstance.exports._120(f,x0)),
_121: f => finalizeWrapper(f,x0 => dartInstance.exports._121(f,x0)),
_122: f => finalizeWrapper(f,x0 => dartInstance.exports._122(f,x0)),
_123: f => finalizeWrapper(f,x0 => dartInstance.exports._123(f,x0)),
_124: f => finalizeWrapper(f,x0 => dartInstance.exports._124(f,x0)),
_125: f => finalizeWrapper(f,x0 => dartInstance.exports._125(f,x0)),
_126: f => finalizeWrapper(f,x0 => dartInstance.exports._126(f,x0)),
_127: f => finalizeWrapper(f,x0 => dartInstance.exports._127(f,x0)),
_128: f => finalizeWrapper(f,x0 => dartInstance.exports._128(f,x0)),
_129: f => finalizeWrapper(f,x0 => dartInstance.exports._129(f,x0)),
_130: f => finalizeWrapper(f,x0 => dartInstance.exports._130(f,x0)),
_131: f => finalizeWrapper(f,x0 => dartInstance.exports._131(f,x0)),
_132: f => finalizeWrapper(f,x0 => dartInstance.exports._132(f,x0)),
_133: f => finalizeWrapper(f,x0 => dartInstance.exports._133(f,x0)),
_134: f => finalizeWrapper(f,x0 => dartInstance.exports._134(f,x0)),
_135: f => finalizeWrapper(f,x0 => dartInstance.exports._135(f,x0)),
_136: f => finalizeWrapper(f,x0 => dartInstance.exports._136(f,x0)),
_137: f => finalizeWrapper(f,x0 => dartInstance.exports._137(f,x0)),
_138: f => finalizeWrapper(f,x0 => dartInstance.exports._138(f,x0)),
_139: f => finalizeWrapper(f,x0 => dartInstance.exports._139(f,x0)),
_140: f => finalizeWrapper(f,x0 => dartInstance.exports._140(f,x0)),
_141: f => finalizeWrapper(f,x0 => dartInstance.exports._141(f,x0)),
_142: f => finalizeWrapper(f,x0 => dartInstance.exports._142(f,x0)),
_143: f => finalizeWrapper(f,x0 => dartInstance.exports._143(f,x0)),
_144: f => finalizeWrapper(f,x0 => dartInstance.exports._144(f,x0)),
_145: f => finalizeWrapper(f,x0 => dartInstance.exports._145(f,x0)),
_146: f => finalizeWrapper(f,x0 => dartInstance.exports._146(f,x0)),
_148: x0 => globalThis.window.flutterCanvasKit = x0,
_149: () => globalThis.window.flutterCanvasKit,
_150: x0 => x0.BlendMode,
_151: x0 => x0.PaintStyle,
_152: x0 => x0.StrokeCap,
_153: x0 => x0.StrokeJoin,
_154: x0 => x0.BlurStyle,
_155: x0 => x0.TileMode,
_156: x0 => x0.FilterMode,
_157: x0 => x0.MipmapMode,
_158: x0 => x0.FillType,
_159: x0 => x0.AlphaType,
_160: x0 => x0.ColorType,
_161: x0 => x0.PathOp,
_162: x0 => x0.ClipOp,
_165: x0 => x0.RectHeightStyle,
_166: x0 => x0.RectWidthStyle,
_168: x0 => x0.TextAlign,
_169: x0 => x0.TextHeightBehavior,
_170: x0 => x0.TextDirection,
_171: x0 => x0.FontWeight,
_174: x0 => x0.Shader,
_175: x0 => x0.MaskFilter,
_177: x0 => x0.ImageFilter,
_178: x0 => x0.Path,
_179: (x0,x1) => x0.computeTonalColors(x1),
_181: x0 => x0.ParagraphBuilder,
_182: (x0,x1) => x0.ParagraphStyle(x1),
_183: (x0,x1) => x0.TextStyle(x1),
_187: x0 => x0.NoDecoration,
_188: x0 => x0.UnderlineDecoration,
_189: x0 => x0.OverlineDecoration,
_190: x0 => x0.LineThroughDecoration,
_191: x0 => x0.DecorationStyle,
_192: x0 => x0.TextBaseline,
_195: x0 => x0.TypefaceFontProvider,
_196: x0 => x0.Typeface,
_197: (x0,x1,x2) => x0.GetWebGLContext(x1,x2),
_198: (x0,x1) => x0.MakeGrContext(x1),
_199: (x0,x1,x2,x3,x4,x5,x6) => x0.MakeOnScreenGLSurface(x1,x2,x3,x4,x5,x6),
_201: (x0,x1) => x0.MakeSWCanvasSurface(x1),
_202: (x0,x1,x2,x3) => x0.MakeImage(x1,x2,x3),
_204: x0 => globalThis.window.CanvasKitInit(x0),
_205: () => globalThis.window.flutterCanvasKit.ColorSpace.SRGB,
_206: x0 => x0.getCanvas(),
_207: x0 => x0.flush(),
_210: x0 => x0.dispose(),
_211: x0 => x0.makeImageSnapshot(),
_212: (x0,x1) => x0.setResourceCacheLimitBytes(x1),
_213: x0 => x0.releaseResourcesAndAbandonContext(),
_214: x0 => x0.delete(),
_218: x0 => x0.Thin,
_219: x0 => x0.ExtraLight,
_220: x0 => x0.Light,
_221: x0 => x0.Normal,
_222: x0 => x0.Medium,
_223: x0 => x0.SemiBold,
_224: x0 => x0.Bold,
_225: x0 => x0.ExtraBold,
_226: x0 => x0.ExtraBlack,
_230: x0 => x0.value,
_231: x0 => x0.RTL,
_232: x0 => x0.LTR,
_233: x0 => x0.value,
_234: x0 => x0.Left,
_235: x0 => x0.Right,
_236: x0 => x0.Center,
_237: x0 => x0.Justify,
_238: x0 => x0.Start,
_239: x0 => x0.End,
_241: x0 => x0.All,
_242: x0 => x0.DisableFirstAscent,
_243: x0 => x0.DisableLastDescent,
_244: x0 => x0.DisableAll,
_246: x0 => x0.Tight,
_247: x0 => x0.Max,
_248: x0 => x0.IncludeLineSpacingMiddle,
_249: x0 => x0.IncludeLineSpacingTop,
_250: x0 => x0.IncludeLineSpacingBottom,
_251: x0 => x0.Strut,
_253: x0 => x0.Tight,
_254: x0 => x0.Max,
_264: x0 => x0.Difference,
_265: x0 => x0.Intersect,
_267: x0 => x0.Winding,
_268: x0 => x0.EvenOdd,
_270: x0 => x0.Difference,
_271: x0 => x0.Intersect,
_272: x0 => x0.Union,
_273: x0 => x0.XOR,
_274: x0 => x0.ReverseDifference,
_276: x0 => x0.Normal,
_277: x0 => x0.Solid,
_278: x0 => x0.Outer,
_279: x0 => x0.Inner,
_281: x0 => x0.Butt,
_282: x0 => x0.Round,
_283: x0 => x0.Square,
_285: x0 => x0.Stroke,
_286: x0 => x0.Fill,
_288: x0 => x0.Clear,
_289: x0 => x0.Src,
_290: x0 => x0.Dst,
_291: x0 => x0.SrcOver,
_292: x0 => x0.DstOver,
_293: x0 => x0.SrcIn,
_294: x0 => x0.DstIn,
_295: x0 => x0.SrcOut,
_296: x0 => x0.DstOut,
_297: x0 => x0.SrcATop,
_298: x0 => x0.DstATop,
_299: x0 => x0.Xor,
_300: x0 => x0.Plus,
_301: x0 => x0.Modulate,
_302: x0 => x0.Screen,
_303: x0 => x0.Overlay,
_304: x0 => x0.Darken,
_305: x0 => x0.Lighten,
_306: x0 => x0.ColorDodge,
_307: x0 => x0.ColorBurn,
_308: x0 => x0.HardLight,
_309: x0 => x0.SoftLight,
_310: x0 => x0.Difference,
_311: x0 => x0.Exclusion,
_312: x0 => x0.Multiply,
_313: x0 => x0.Hue,
_314: x0 => x0.Saturation,
_315: x0 => x0.Color,
_316: x0 => x0.Luminosity,
_318: x0 => x0.Miter,
_319: x0 => x0.Round,
_320: x0 => x0.Bevel,
_322: x0 => x0.Clamp,
_323: x0 => x0.Repeat,
_324: x0 => x0.Mirror,
_325: x0 => x0.Decal,
_327: x0 => x0.Nearest,
_328: x0 => x0.Linear,
_330: x0 => x0.None,
_332: x0 => x0.Linear,
_335: x0 => x0.Premul,
_336: x0 => x0.Unpremul,
_341: x0 => x0.RGBA_8888,
_360: x0 => x0.width(),
_361: x0 => x0.height(),
_364: (x0,x1,x2,x3) => x0.readPixels(x1,x2,x3),
_365: x0 => x0.encodeToBytes(),
_368: (x0,x1,x2,x3,x4,x5,x6) => x0.MakeLinearGradient(x1,x2,x3,x4,x5,x6),
_372: x0 => x0.delete(),
_373: (x0,x1,x2,x3) => x0.MakeBlur(x1,x2,x3),
_374: (x0,x1) => x0.setBlendMode(x1),
_375: (x0,x1) => x0.setStyle(x1),
_376: (x0,x1) => x0.setStrokeWidth(x1),
_377: (x0,x1) => x0.setStrokeCap(x1),
_378: (x0,x1) => x0.setStrokeJoin(x1),
_379: (x0,x1) => x0.setAntiAlias(x1),
_380: (x0,x1) => x0.setColorInt(x1),
_381: (x0,x1) => x0.setShader(x1),
_382: (x0,x1) => x0.setMaskFilter(x1),
_383: (x0,x1) => x0.setColorFilter(x1),
_384: (x0,x1) => x0.setStrokeMiter(x1),
_385: (x0,x1) => x0.setImageFilter(x1),
_386: x0 => x0.delete(),
_387: x0 => x0.delete(),
_395: (x0,x1,x2,x3) => x0.MakeMatrixTransform(x1,x2,x3),
_398: x0 => x0.delete(),
_399: (x0,x1) => x0.MakeFromCmds(x1),
_400: (x0,x1,x2,x3) => x0.MakeFromOp(x1,x2,x3),
_401: () => globalThis.Float32Array,
_402: () => globalThis.Uint32Array,
_403: (x0,x1) => globalThis.window.flutterCanvasKit.Malloc(x0,x1),
_404: x0 => globalThis.window.flutterCanvasKit.Free(x0),
_407: x0 => x0.toTypedArray(),
_410: x0 => x0.toTypedArray(),
_411: (x0,x1) => x0.setFillType(x1),
_413: (x0,x1,x2,x3) => x0.addOval(x1,x2,x3),
_414: (x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11) => x0.addPath(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11),
_415: (x0,x1,x2) => x0.addPoly(x1,x2),
_416: (x0,x1,x2) => x0.addRRect(x1,x2),
_417: (x0,x1) => x0.addRect(x1),
_420: x0 => x0.close(),
_422: (x0,x1,x2) => x0.contains(x1,x2),
_424: x0 => x0.getBounds(),
_425: (x0,x1,x2) => x0.lineTo(x1,x2),
_426: (x0,x1,x2) => x0.moveTo(x1,x2),
_431: (x0,x1,x2) => x0.rLineTo(x1,x2),
_434: x0 => x0.reset(),
_435: x0 => x0.toSVGString(),
_437: x0 => x0.copy(),
_438: (x0,x1,x2,x3,x4,x5,x6,x7,x8,x9) => x0.transform(x1,x2,x3,x4,x5,x6,x7,x8,x9),
_439: x0 => x0.toCmds(),
_440: x0 => x0.delete(),
_448: (x0,x1) => x0.beginRecording(x1),
_449: x0 => x0.finishRecordingAsPicture(),
_450: x0 => x0.delete(),
_451: (x0,x1) => x0.clear(x1),
_452: (x0,x1,x2,x3) => x0.clipPath(x1,x2,x3),
_453: (x0,x1,x2,x3) => x0.clipRRect(x1,x2,x3),
_454: (x0,x1,x2,x3) => x0.clipRect(x1,x2,x3),
_458: (x0,x1,x2,x3,x4) => x0.drawCircle(x1,x2,x3,x4),
_460: (x0,x1,x2,x3) => x0.drawDRRect(x1,x2,x3),
_463: (x0,x1,x2,x3,x4,x5,x6) => x0.drawImageRectCubic(x1,x2,x3,x4,x5,x6),
_464: (x0,x1,x2,x3,x4,x5,x6) => x0.drawImageRectOptions(x1,x2,x3,x4,x5,x6),
_466: (x0,x1,x2,x3,x4,x5) => x0.drawLine(x1,x2,x3,x4,x5),
_467: (x0,x1,x2) => x0.drawOval(x1,x2),
_468: (x0,x1) => x0.drawPaint(x1),
_469: (x0,x1,x2) => x0.drawPath(x1,x2),
_471: (x0,x1,x2) => x0.drawRRect(x1,x2),
_472: (x0,x1,x2) => x0.drawRect(x1,x2),
_473: (x0,x1,x2,x3,x4,x5,x6,x7) => x0.drawShadow(x1,x2,x3,x4,x5,x6,x7),
_475: x0 => x0.save(),
_476: x0 => x0.getSaveCount(),
_477: (x0,x1,x2,x3,x4) => x0.saveLayer(x1,x2,x3,x4),
_478: x0 => x0.restore(),
_480: (x0,x1,x2,x3) => x0.rotate(x1,x2,x3),
_481: (x0,x1,x2) => x0.scale(x1,x2),
_483: (x0,x1) => x0.concat(x1),
_484: (x0,x1,x2) => x0.translate(x1,x2),
_486: (x0,x1) => x0.drawPicture(x1),
_487: (x0,x1,x2,x3) => x0.drawParagraph(x1,x2,x3),
_488: x0 => x0.delete(),
_489: (x0,x1,x2) => x0.MakeFromFontProvider(x1,x2),
_490: (x0,x1) => x0.addText(x1),
_491: (x0,x1) => x0.pushStyle(x1),
_492: (x0,x1,x2,x3) => x0.pushPaintStyle(x1,x2,x3),
_493: x0 => x0.pop(),
_495: x0 => x0.getText(),
_497: (x0,x1) => x0.setWordsUtf16(x1),
_499: (x0,x1) => x0.setGraphemeBreaksUtf16(x1),
_501: (x0,x1) => x0.setLineBreaksUtf16(x1),
_502: x0 => x0.build(),
_503: x0 => x0.delete(),
_504: (x0,x1) => x0.textAlign = x1,
_505: (x0,x1) => x0.textDirection = x1,
_506: (x0,x1) => x0.heightMultiplier = x1,
_507: (x0,x1) => x0.textHeightBehavior = x1,
_508: (x0,x1) => x0.maxLines = x1,
_509: (x0,x1) => x0.ellipsis = x1,
_510: (x0,x1) => x0.textStyle = x1,
_512: (x0,x1) => x0.replaceTabCharacters = x1,
_513: x0 => x0.Solid,
_514: x0 => x0.Double,
_515: x0 => x0.Dotted,
_516: x0 => x0.Dashed,
_517: x0 => x0.Wavy,
_519: x0 => x0.Alphabetic,
_520: x0 => x0.Ideographic,
_529: (x0,x1) => x0.backgroundColor = x1,
_530: (x0,x1) => x0.color = x1,
_531: (x0,x1) => x0.foregroundColor = x1,
_532: (x0,x1) => x0.decoration = x1,
_533: (x0,x1) => x0.decorationThickness = x1,
_534: (x0,x1) => x0.decorationColor = x1,
_535: (x0,x1) => x0.decorationStyle = x1,
_536: (x0,x1) => x0.textBaseline = x1,
_537: (x0,x1) => x0.fontSize = x1,
_538: (x0,x1) => x0.letterSpacing = x1,
_539: (x0,x1) => x0.wordSpacing = x1,
_540: (x0,x1) => x0.heightMultiplier = x1,
_541: (x0,x1) => x0.halfLeading = x1,
_543: (x0,x1) => x0.fontFamilies = x1,
_544: (x0,x1) => x0.fontStyle = x1,
_545: (x0,x1) => x0.shadows = x1,
_546: (x0,x1) => x0.fontFeatures = x1,
_547: (x0,x1) => x0.fontVariations = x1,
_556: (x0,x1) => x0.weight = x1,
_558: (x0,x1) => x0.color = x1,
_559: (x0,x1) => x0.offset = x1,
_560: (x0,x1) => x0.blurRadius = x1,
_563: (x0,x1) => x0.axis = x1,
_564: (x0,x1) => x0.value = x1,
_565: (x0,x1) => x0.getGlyphIDs(x1),
_566: (x0,x1,x2,x3) => x0.getGlyphBounds(x1,x2,x3),
_568: x0 => x0.delete(),
_570: (x0,x1,x2) => x0.registerFont(x1,x2),
_571: x0 => x0.startIndex,
_572: x0 => x0.endIndex,
_581: x0 => x0.baseline,
_582: x0 => x0.lineNumber,
_583: x0 => x0.rect,
_585: x0 => x0.dir,
_587: x0 => x0.getAlphabeticBaseline(),
_588: x0 => x0.didExceedMaxLines(),
_589: x0 => x0.getHeight(),
_590: x0 => x0.getIdeographicBaseline(),
_591: x0 => x0.getLineMetrics(),
_592: x0 => x0.getLongestLine(),
_593: x0 => x0.getMaxIntrinsicWidth(),
_594: x0 => x0.getMinIntrinsicWidth(),
_595: x0 => x0.getMaxWidth(),
_596: (x0,x1,x2,x3,x4) => x0.getRectsForRange(x1,x2,x3,x4),
_597: x0 => x0.getRectsForPlaceholders(),
_598: (x0,x1,x2) => x0.getGlyphPositionAtCoordinate(x1,x2),
_599: (x0,x1) => x0.getWordBoundary(x1),
_600: (x0,x1) => x0.layout(x1),
_601: x0 => x0.delete(),
_602: x0 => x0.affinity,
_603: x0 => x0.pos,
_604: x0 => x0.start,
_605: x0 => x0.end,
_607: x0 => x0.ambient,
_608: x0 => x0.spot,
_610: x0 => x0.Make(),
_611: (x0,x1) => x0.MakeFreeTypeFaceFromData(x1),
_612: x0 => x0.delete(),
_613: x0 => x0.isDeleted(),
_614: x0 => x0.constructor,
_615: x0 => x0.name,
_616: (x0,x1,x2) => x0.register(x1,x2),
_617: () => globalThis.window.FinalizationRegistry,
_639: x0 => globalThis._flutterWebCachedModule = x0,
_640: () => globalThis._flutterWebCachedModule,
_641: x0 => globalThis._flutterWebCachedExports = x0,
_642: () => globalThis._flutterWebCachedExports,
_643: () => globalThis.Object,
_644: () => globalThis.exports,
_645: () => globalThis.module,
_646: x0 => globalThis.window.flutterCanvasKit.RuntimeEffect.Make(x0),
_647: (x0,x1) => x0.makeShader(x1),
_648: (x0,x1,x2) => x0.makeShaderWithChildren(x1,x2),
_649: f => finalizeWrapper(f,() => dartInstance.exports._649(f)),
_650: f => finalizeWrapper(f,x0 => dartInstance.exports._650(f,x0)),
_651: f => finalizeWrapper(f,() => dartInstance.exports._651(f)),
_652: f => finalizeWrapper(f,x0 => dartInstance.exports._652(f,x0)),
_653: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._653(f,x0,x1)),
_654: f => finalizeWrapper(f,x0 => dartInstance.exports._654(f,x0)),
_655: f => finalizeWrapper(f,x0 => dartInstance.exports._655(f,x0)),
_656: () => globalThis.window.flutterConfiguration,
_657: x0 => x0.canvasKitBaseUrl,
_658: x0 => x0.canvasKitVariant,
_659: x0 => x0.canvasKitForceCpuOnly,
_660: x0 => x0.canvasKitMaximumSurfaces,
_661: x0 => x0.debugShowSemanticsNodes,
_662: x0 => x0.hostElement,
_663: x0 => x0.renderer,
_664: () => globalThis.window.flutterWebRenderer,
_665: x0 => x0.console,
_666: x0 => x0.devicePixelRatio,
_667: x0 => x0.document,
_668: x0 => x0.history,
_669: x0 => x0.innerHeight,
_670: x0 => x0.innerWidth,
_671: x0 => x0.location,
_672: x0 => x0.navigator,
_673: x0 => x0.visualViewport,
_674: x0 => x0.performance,
_676: (x0,x1) => x0.dispatchEvent(x1),
_677: (x0,x1) => x0.matchMedia(x1),
_678: x0 => x0.screen,
_679: (x0,x1) => x0.requestAnimationFrame(x1),
_680: x0 => x0.trustedTypes,
_681: (x0,x1) => x0.warn(x1),
_682: (x0,x1) => x0.error(x1),
_683: (x0,x1) => x0.debug(x1),
_684: () => globalThis.window,
_685: () => globalThis.Intl,
_686: () => globalThis.Symbol,
_687: x0 => x0.clipboard,
_688: x0 => x0.maxTouchPoints,
_689: x0 => x0.vendor,
_690: x0 => x0.language,
_691: x0 => x0.platform,
_692: x0 => x0.userAgent,
_693: x0 => x0.documentElement,
_694: (x0,x1) => x0.querySelector(x1),
_695: (x0,x1) => x0.execCommand(x1),
_696: x0 => x0.currentScript,
_697: (x0,x1,x2) => x0.createElementNS(x1,x2),
_698: (x0,x1) => x0.createTextNode(x1),
_699: (x0,x1) => x0.createEvent(x1),
_700: x0 => x0.activeElement,
_701: x0 => x0.fonts,
_702: x0 => x0.head,
_703: x0 => x0.body,
_704: (x0,x1) => x0.title = x1,
_708: () => globalThis.document,
_710: x0 => x0.target,
_712: x0 => x0.timeStamp,
_713: x0 => x0.type,
_714: x0 => x0.preventDefault(),
_715: x0 => x0.stopPropagation(),
_720: x0 => x0.firstChild,
_721: x0 => x0.innerText,
_723: x0 => x0.lastChild,
_724: (x0,x1) => x0.appendChild(x1),
_725: x0 => x0.parentNode,
_726: x0 => x0.nextSibling,
_727: (x0,x1,x2) => x0.insertBefore(x1,x2),
_728: (x0,x1) => x0.removeChild(x1),
_729: x0 => x0.isConnected,
_730: (x0,x1) => x0.cloneNode(x1),
_733: x0 => x0.ownerDocument,
_734: x0 => x0.clientHeight,
_735: x0 => x0.clientWidth,
_736: x0 => x0.id,
_737: (x0,x1) => x0.id = x1,
_740: (x0,x1) => x0.spellcheck = x1,
_741: x0 => x0.tagName,
_742: x0 => x0.style,
_743: (x0,x1) => x0.append(x1),
_744: (x0,x1) => x0.getAttribute(x1),
_745: x0 => x0.getBoundingClientRect(),
_746: (x0,x1) => x0.prepend(x1),
_747: (x0,x1) => x0.querySelector(x1),
_748: x0 => x0.remove(),
_749: (x0,x1,x2) => x0.setAttribute(x1,x2),
_750: (x0,x1) => x0.removeAttribute(x1),
_751: (x0,x1) => x0.tabIndex = x1,
_753: x0 => x0.focus(),
_754: x0 => x0.scrollTop,
_755: (x0,x1) => x0.scrollTop = x1,
_756: x0 => x0.scrollLeft,
_757: (x0,x1) => x0.scrollLeft = x1,
_758: x0 => x0.classList,
_759: (x0,x1) => x0.className = x1,
_761: x0 => x0.blur(),
_762: x0 => x0.click(),
_763: (x0,x1) => x0.hasAttribute(x1),
_765: (x0,x1) => x0.getPropertyValue(x1),
_766: (x0,x1) => x0.removeProperty(x1),
_768: x0 => x0.offsetLeft,
_769: x0 => x0.offsetTop,
_770: x0 => x0.offsetParent,
_771: x0 => x0.name,
_772: (x0,x1) => x0.name = x1,
_773: x0 => x0.content,
_774: (x0,x1) => x0.content = x1,
_783: (x0,x1) => x0.src = x1,
_785: x0 => x0.sheet,
_786: (x0,x1) => x0.mark(x1),
_787: (x0,x1,x2,x3) => x0.measure(x1,x2,x3),
_788: x0 => x0.now(),
_790: (x0,x1) => x0.width = x1,
_792: (x0,x1) => x0.height = x1,
_794: (x0,x1) => x0.getParameter(x1),
_795: x0 => x0.SAMPLES,
_796: x0 => x0.STENCIL_BITS,
_798: x0 => x0.fillStyle,
_799: (x0,x1) => x0.fillStyle = x1,
_800: x0 => x0.font,
_801: (x0,x1) => x0.font = x1,
_803: (x0,x1) => x0.direction = x1,
_804: (x0,x1) => x0.lineWidth = x1,
_805: (x0,x1) => x0.strokeStyle = x1,
_806: x0 => x0.strokeStyle,
_807: x0 => x0.beginPath(),
_808: x0 => x0.closePath(),
_809: (x0,x1,x2,x3,x4) => x0.createLinearGradient(x1,x2,x3,x4),
_810: (x0,x1,x2) => x0.createPattern(x1,x2),
_813: (x0,x1,x2,x3,x4) => x0.fillRect(x1,x2,x3,x4),
_814: (x0,x1,x2) => x0.lineTo(x1,x2),
_815: (x0,x1) => x0.measureText(x1),
_816: (x0,x1,x2) => x0.moveTo(x1,x2),
_817: x0 => x0.save(),
_818: x0 => x0.stroke(),
_819: (x0,x1,x2,x3,x4) => x0.rect(x1,x2,x3,x4),
_821: x0 => x0.restore(),
_822: (x0,x1,x2,x3,x4,x5,x6) => x0.setTransform(x1,x2,x3,x4,x5,x6),
_823: (x0,x1,x2,x3,x4,x5,x6) => x0.transform(x1,x2,x3,x4,x5,x6),
_824: (x0,x1,x2) => x0.scale(x1,x2),
_825: (x0,x1,x2,x3,x4) => x0.clearRect(x1,x2,x3,x4),
_826: (x0,x1,x2) => x0.translate(x1,x2),
_827: (x0,x1) => x0.rotate(x1),
_828: (x0,x1,x2,x3,x4,x5,x6) => x0.bezierCurveTo(x1,x2,x3,x4,x5,x6),
_829: (x0,x1,x2,x3,x4) => x0.quadraticCurveTo(x1,x2,x3,x4),
_830: (x0,x1) => x0.globalCompositeOperation = x1,
_831: (x0,x1) => x0.lineCap = x1,
_832: (x0,x1) => x0.lineJoin = x1,
_833: (x0,x1) => x0.shadowBlur = x1,
_834: (x0,x1) => x0.filter = x1,
_835: (x0,x1) => x0.shadowOffsetX = x1,
_836: (x0,x1) => x0.shadowOffsetY = x1,
_837: (x0,x1) => x0.shadowColor = x1,
_838: (x0,x1,x2,x3,x4,x5,x6,x7,x8) => x0.ellipse(x1,x2,x3,x4,x5,x6,x7,x8),
_839: (x0,x1,x2,x3) => x0.strokeText(x1,x2,x3),
_840: (x0,x1) => x0.globalAlpha = x1,
_843: (x0,x1,x2) => x0.addColorStop(x1,x2),
_844: x0 => x0.status,
_851: x0 => x0.width,
_853: x0 => x0.x,
_854: x0 => x0.y,
_855: x0 => x0.width,
_856: x0 => x0.height,
_857: x0 => x0.top,
_858: x0 => x0.right,
_859: x0 => x0.bottom,
_860: x0 => x0.left,
_862: (x0,x1) => x0.add(x1),
_863: x0 => x0.clear(),
_865: x0 => x0.height,
_866: x0 => x0.width,
_867: (x0,x1) => x0.value = x1,
_868: x0 => x0.select(),
_869: (x0,x1) => x0.placeholder = x1,
_870: (x0,x1) => x0.name = x1,
_871: x0 => x0.selectionStart,
_872: x0 => x0.selectionEnd,
_875: x0 => x0.value,
_878: x0 => x0.altKey,
_879: x0 => x0.code,
_880: x0 => x0.ctrlKey,
_881: x0 => x0.key,
_882: x0 => x0.keyCode,
_883: x0 => x0.location,
_884: x0 => x0.metaKey,
_885: x0 => x0.repeat,
_886: x0 => x0.shiftKey,
_887: x0 => x0.isComposing,
_888: (x0,x1) => x0.getModifierState(x1),
_889: x0 => x0.pathname,
_890: x0 => x0.search,
_895: x0 => x0.disconnect(),
_896: x0 => x0.attributeName,
_897: x0 => x0.type,
_898: x0 => x0.matches,
_899: (x0,x1) => x0.addListener(x1),
_900: (x0,x1) => x0.removeListener(x1),
_901: x0 => x0.matches,
_902: x0 => x0.clientX,
_903: x0 => x0.clientY,
_904: x0 => x0.offsetX,
_905: x0 => x0.offsetY,
_908: x0 => x0.button,
_909: x0 => x0.buttons,
_910: (x0,x1) => x0.getModifierState(x1),
_911: x0 => x0.pointerId,
_912: x0 => x0.pointerType,
_913: x0 => x0.pressure,
_914: x0 => x0.tiltX,
_915: x0 => x0.tiltY,
_916: x0 => x0.deltaX,
_917: x0 => x0.deltaY,
_918: x0 => x0.wheelDeltaX,
_919: x0 => x0.wheelDeltaY,
_920: x0 => x0.deltaMode,
_921: x0 => x0.altKey,
_922: x0 => x0.ctrlKey,
_923: x0 => x0.metaKey,
_924: x0 => x0.shiftKey,
_925: x0 => x0.identifier,
_926: x0 => x0.clientX,
_927: x0 => x0.clientY,
_928: x0 => x0.data,
_929: (x0,x1) => x0.type = x1,
_930: (x0,x1) => x0.max = x1,
_931: (x0,x1) => x0.min = x1,
_932: (x0,x1) => x0.value = x1,
_933: x0 => x0.value,
_934: x0 => x0.disabled,
_935: (x0,x1) => x0.disabled = x1,
_936: (x0,x1) => x0.placeholder = x1,
_937: (x0,x1) => x0.name = x1,
_938: (x0,x1) => x0.autocomplete = x1,
_939: x0 => x0.selectionStart,
_940: x0 => x0.selectionEnd,
_947: (x0,x1) => x0.add(x1),
_950: (x0,x1) => x0.noValidate = x1,
_951: (x0,x1) => x0.method = x1,
_952: (x0,x1) => x0.action = x1,
_955: (x0,x1) => x0.height = x1,
_956: (x0,x1) => x0.width = x1,
_959: x0 => x0.activeElement,
_964: x0 => x0.orientation,
_965: x0 => x0.unlock(),
_976: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._976(f,x0,x1)),
_977: x0 => x0.disconnect(),
_978: (x0,x1,x2) => x0.observe(x1,x2),
_980: x0 => x0.contentRect,
_982: (x0,x1,x2) => x0.createPolicy(x1,x2),
_983: (x0,x1) => x0.createScriptURL(x1),
_984: x0 => x0.length,
_985: x0 => x0.length,
_986: x0 => x0.iterator,
_987: x0 => x0.Segmenter,
_988: x0 => x0.v8BreakIterator,
_989: (x0,x1) => x0.segment(x1),
_990: x0 => x0.next(),
_991: x0 => x0.done,
_992: x0 => x0.value,
_993: x0 => x0.index,
_997: (x0,x1) => x0.adoptText(x1),
_998: x0 => x0.first(),
_999: x0 => x0.next(),
_1000: x0 => x0.current(),
_1001: x0 => x0.breakType(),
_1002: f => finalizeWrapper(f,x0 => dartInstance.exports._1002(f,x0)),
_1003: f => finalizeWrapper(f,x0 => dartInstance.exports._1003(f,x0)),
_1004: f => finalizeWrapper(f,x0 => dartInstance.exports._1004(f,x0)),
_1005: x0 => x0.loader,
_1006: () => globalThis._flutter,
_1007: (x0,x1) => x0.didCreateEngineInitializer(x1),
_1008: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1008(f,x0,x1)),
_1009: (x0,x1) => x0.addPopStateListener(x1),
_1010: x0 => x0.getPath(),
_1011: x0 => x0.getState(),
_1013: (x0,x1,x2,x3) => x0.pushState(x1,x2,x3),
_1014: (x0,x1,x2,x3) => x0.replaceState(x1,x2,x3),
_1015: (x0,x1) => x0.go(x1),
_1016: () => globalThis.window._flutter_internal_on_benchmark,
_1076: () => globalThis.window.__flutterState,
_1077: x0 => globalThis.window.__flutterState = x0,
_1078: x0 => globalThis._flutter_web_set_location_strategy = x0,
_1079: f => finalizeWrapper(f,x0 => dartInstance.exports._1079(f,x0)),
_35: f => finalizeWrapper(f,x0 => dartInstance.exports._35(f,x0)),
_1: (x0,x1) => x0.matchMedia(x1),
_2: x0 => x0.navigator,
_3: x0 => x0.getSelection(),
_4: () => globalThis.window,
_5: x0 => x0.matches,
_6: x0 => x0.platform,
_17: x0 => x0.createRange(),
_18: x0 => x0.head,
_19: () => globalThis.window.document,
_21: (x0,x1) => x0.selectNode(x1),
_22: (x0,x1) => x0.innerText = x1,
_23: (x0,x1) => x0.append(x1),
_24: x0 => x0.style,
_25: x0 => x0.classList,
_26: x0 => x0.offsetX,
_27: x0 => x0.offsetY,
_28: x0 => x0.button,
_29: x0 => x0.removeAllRanges(),
_30: (x0,x1) => x0.addRange(x1),
_31: x0 => x0.sheet,
_32: (x0,x1) => x0.add(x1)
      };

    const baseImports = {
        dart2wasm: dart2wasm,
        Math: Math,
        Date: Date,
        Object: Object,
        Array: Array,
        Reflect: Reflect,
    };
    dartInstance = await WebAssembly.instantiate(await modulePromise, {
        ...baseImports,
        ...(await importObjectPromise),
    });

    // Initialize async bridge.
    asyncBridge = new WebAssembly.Function(
        {parameters: ['anyref', 'anyref'], results: ['externref']},
        dartInstance.exports.$asyncBridge,
        {promising: 'first'});
    return dartInstance;
}

// Call the main function for the instantiated module
// `moduleInstance` is the instantiated dart2wasm module
// `args` are any arguments that should be passed into the main function.
export const invoke = async (moduleInstance, ...args) => {
    moduleInstance.exports.$invokeMain(moduleInstance.exports.$getMain());
}

